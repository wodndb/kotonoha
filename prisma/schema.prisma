generator client {
  provider = "prisma-client-js"
  output   = "../src/app/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String     @id @default(uuid())
  email    String     @unique
  name     String?
  UserWord UserWord[]
}

model UserWord {
  id          Int      @id @default(autoincrement())
  userId      String
  wordId      Int
  studyStatus String
  isFavorite  Boolean  @default(false)
  updatedAt   DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])
  word Word @relation(fields: [wordId], references: [id])

  @@unique([userId, wordId])
}

model Word {
  id           Int     @id @default(autoincrement())
  text         String
  type         String
  level        String?
  reading      String?
  partOfSpeech String?

  components WordComponent[]
  meanings   WordMeaning[]
  examples   Example[]
  UserWord   UserWord[]

  synonymsFrom WordSynonym[] @relation("SynonymFrom")
  synonymsTo   WordSynonym[] @relation("SynonymTo")

  antonymsFrom WordAntonym[] @relation("AntonymFrom")
  antonymsTo   WordAntonym[] @relation("AntonymTo")
}

model WordComponent {
  id      Int     @id @default(autoincrement())
  wordId  Int
  char    String
  reading String?
  type    String

  word Word @relation(fields: [wordId], references: [id])
}

model Meaning {
  id   Int    @id @default(autoincrement())
  text String

  words WordMeaning[]
}

model WordMeaning {
  wordId    Int
  meaningId Int

  word    Word    @relation(fields: [wordId], references: [id])
  meaning Meaning @relation(fields: [meaningId], references: [id])

  @@id([wordId, meaningId])
}

model Example {
  id          Int    @id @default(autoincrement())
  wordId      Int
  sentence    String
  translation String

  word Word @relation(fields: [wordId], references: [id])
}

model WordSynonym {
  wordId    Int
  synonymId Int

  word    Word @relation("SynonymFrom", fields: [wordId], references: [id])
  synonym Word @relation("SynonymTo", fields: [synonymId], references: [id])

  @@id([wordId, synonymId])
}

model WordAntonym {
  wordId    Int
  antonymId Int

  word    Word @relation("AntonymFrom", fields: [wordId], references: [id])
  antonym Word @relation("AntonymTo", fields: [antonymId], references: [id])

  @@id([wordId, antonymId])
}
